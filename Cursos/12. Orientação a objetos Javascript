Orienta√ß√£o a objetos Javascript



Paradigmas

- Imperativo -

- Foca em como resolver os problemas 
- Procedural, voltado a objetos e paralelo
- Descrever como as coisas v√£o ser chamadas, ordem, etc..



- Declarativo -

- Foca no que fazer
- L√≥gico, funcional e database
- Acontecem declarando as coisas



Na orienta√ß√£o voltada a objetos os programas s√£o objetos que possuem suas propriedades. Existem 4 pilares nessa programa√ß√£o:

- Abstra√ß√£o -

- Processo mental que consiste em isolar um aspecto determinado de estados mais complexos, com intuito de simplificar a classifica√ß√£o, avalia√ß√£o de 
um todo, ou permiti a comunica√ß√£o do mesmo.
- generalizar algo


- Heran√ßa -

- Objetos filhos que herdam caracter√≠sticas de objetos pais, que s√£o objetos ascendentes a eles.


- Encapsulamento -

- Cada classe tem propriedades e m√©todos independente do resto do c√≥digo.
- A propriedade que pertence √†quela classe somente altera naquela classe.


- Polimorfismo -

- Objetos podem herdar a mesma classe pai, mas se comportam de forma diferente quando invocamos seus m√©todos.



Javascript orientado a objetos 

- Prot√≥tipos -

- Todos objetos em Javascript herdam propriedades e m√©todos de um prototype
- O objeto Object.prototype est√° no topo de uma cadeia
- Na cadeia de prot√≥tipos, um objeto procuraria uma caracter√≠stica ou fun√ß√£o por heran√ßa at√© chegar em null



- Classes - 

- Syntatic sugar: uma sintaxe feita para facilitar a escrita
- N√£o existem nativamente, utiliza-se objetos que tem prot√≥tipos
- Todas as classes s√£o objetos e a heran√ßa se d√° por prot√≥tipo


Class Meal {
  constructor (food){
    this.food = food
  }
  
  eat() {
    return 'üòÅ'
  }
}

- Construtor: Constroi a classe e atribui par√¢metros para valores dentro da classe
- Get e set: Para ter acesso a propriedades de um objeto, get vai retornar o valor e Set vai determinar outro valor.
- Super(): M√©todo que manda para fun√ß√£o pai, utiliza as propriedades do pai
- M√©todo: √â poss√≠vel sobrescrever m√©todos herdados, para que a classe filha tenha diferencia√ß√£o nos seus m√©todos



